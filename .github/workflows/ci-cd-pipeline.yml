
name: CI/CD Pipeline Complète

on:

  pull_request:
   types: [opened, synchronize, reopened]
   branches: [ main ]

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  # Étape 1: Tests Backend
  backend-tests:
    name: Tests Backend & Coverage
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/backend-tests-coverage.yml
    secrets: inherit

  # Étape 2: Tests Frontend
  frontend-tests:
    name: Tests Frontend & Coverage
    needs: [backend-tests]
    if: success()  && needs.backend-tests.result == 'success'
    uses: ./.github/workflows/frontend-tests-coverage.yml
    secrets: inherit

  # Étape 3: Analyse Qualité Backend et Frontend (déclenchée si tests OK)
  sonar-quality-check:
    name: SonarCloud Quality Check 
    needs: [backend-tests, frontend-tests]
    if: success() && needs.backend-tests.result == 'success' && needs.frontend-tests.result == 'success'
    uses: ./.github/workflows/sonarcloud_quality_check.yml
    secrets: inherit

 
  # Étape 4: Build & Push Docker (déclenchée si qualité OK)
  docker-build:
    name: Build & Push Docker Hub
    needs: [sonar-quality-check]
    # If: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.sonar-quality-check.result == 'success'
    # Déclenche le Build & Push après la fusion d'une Pull Request (événement 'push' vers main/develop) 
    # et seulement si l'étape de qualité (SonarCloud) est un succès.
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.sonar-quality-check.result == 'success' 

    uses: ./.github/workflows/docker.yml
    secrets: inherit